# Your keymap
#
# Atom keymaps work similarly to style sheets. Just as style sheets use
# selectors to apply styles to elements, Atom keymaps use selectors to associate
# keystrokes with events in specific contexts. Unlike style sheets however,
# each selector can only be declared once.
#
# You can create a new keybinding in this file by typing "key" and then hitting
# tab.
#
# Here's an example taken from Atom's built-in keymap:
#
# 'atom-text-editor':
#   'enter': 'editor:newline'
#
# 'atom-workspace':
#   'ctrl-shift-p': 'core:move-up'
#   'ctrl-p': 'core:move-down'
#
# You can find more information about keymaps in these guides:
# * https://atom.io/docs/latest/using-atom-basic-customization#customizing-key-bindings
# * https://atom.io/docs/latest/behind-atom-keymaps-in-depth
#
# If you're having trouble with your keybindings not working, try the
# Keybinding Resolver: `Cmd+.` on OS X and `Ctrl+.` on other platforms. See the
# Debugging Guide for more information:
# * https://atom.io/docs/latest/hacking-atom-debugging#check-the-keybindings
#
# This file uses CoffeeScript Object Notation (CSON).
# If you are unfamiliar with CSON, you can read more about it in the
# Atom Flight Manual:
# https://atom.io/docs/latest/using-atom-basic-customization#cson

'body':
  # --- FAKE LEADER COMMANDS ---
  ', n': 'tree-view:toggle'
  ', n': 'nuclide-file-tree:toggle'

# --- GENERAL OVERRIDES ---
# workspace
'.platform-darwin atom-workspace':
  'cmd-k j': 'nuclide-move-pane:move-tab-to-new-pane-down'
  'cmd-k k': 'nuclide-move-pane:move-tab-to-new-pane-up'
  'cmd-k h': 'nuclide-move-pane:move-tab-to-new-pane-left'
  'cmd-k l': 'nuclide-move-pane:move-tab-to-new-pane-right'

# autocomplete
'body atom-text-editor.autocomplete-active':
  'ctrl-k': 'autocomplete-plus:move-up'
  'ctrl-j': 'autocomplete-plus:move-down'

# nuclide file tree
'.nuclide-file-tree':
  'ctrl-v': 'pane:split-right'
  'ctrl-s': 'pane:split-down'
  'ctrl-k': 'core:move-up'
  'ctrl-j': 'core:move-down'

# nuclide omnisearch
'.omnisearch-modal atom-text-editor':
  'ctrl-v': 'pane:split-right'
  'ctrl-s': 'pane:split-down'
  'ctrl-k': 'core:move-up'
  'ctrl-j': 'core:move-down'

# fuzzy-finder
'.fuzzy-finder atom-text-editor[mini]':
  'ctrl-v': 'pane:split-right'
  'ctrl-s': 'pane:split-down'
  'ctrl-k': 'core:move-up'
  'ctrl-j': 'core:move-down'

# vim-mode-plus
'atom-text-editor.vim-mode-plus:not(.insert-mode)':
  'ctrl-h': 'window:focus-pane-on-left'
  'ctrl-l': 'window:focus-pane-on-right'
  'ctrl-j': 'window:focus-pane-below'
  'ctrl-k': 'window:focus-pane-right'
  'cmd-enter': 'vim-mode-plus:maximize-pane'
  # --- FAKE LEADER COMMANDS ---
  ', /': 'editor:toggle-line-comments'

'atom-text-editor.vim-mode-plus.normal-mode':
  'y s': 'vim-mode-plus:surround'
  'd s': 'vim-mode-plus:delete-surround'
  'c s': 'vim-mode-plus:change-surround'
  'y m s':  'vim-mode-plus:map-surround'
  # vim-mode-plus-ex-mode
  ':': 'vim-mode-plus-ex-mode:open'
  '!': 'vim-mode-plus-ex-mode:toggle-setting'

# text-editor
'atom-text-editor:not([mini])':
  'ctrl-i': 'cursor-history:next'
  'ctrl-o': 'cursor-history:prev'

# --- RUBY FILES ---
"atom-text-editor.vim-mode-plus:not(.insert-mode)[data-grammar='source ruby']":
  ', t t': 'ruby-test:toggle'
  ', t s': 'ruby-test:test-single'
  ', t f': 'ruby-test:test-file'
  ', t a': 'ruby-test:test-all'
