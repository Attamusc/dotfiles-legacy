{
  "name": "cson-safe",
  "version": "0.1.1",
  "description": "Safe parsing of CSON files",
  "main": "lib/cson-safe.js",
  "keywords": [
    "cson",
    "parser"
  ],
  "scripts": {
    "test": "mocha test/**/*.coffee"
  },
  "author": {
    "name": "Jan Krems",
    "email": "<jan.krems@groupon.com"
  },
  "devDependencies": {
    "mocha": "~1.17.1",
    "assertive": "~1.3.2",
    "npub": "0.0.5"
  },
  "dependencies": {
    "coffee-script-redux": "2.0.0-beta8"
  },
  "publishConfig": {
    "license": {
      "exclude": [
        "test"
      ]
    }
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/groupon/cson-safe.git"
  },
  "bugs": {
    "url": "https://github.com/groupon/cson-safe/issues"
  },
  "readme": "# cson-safe\n\nAn alternative to [cson](https://github.com/bevry/cson).\nAdvantages of `cson-safe`:\n\n* A strict subset of CSON that allows only data\n* Interface is identical to JSON.{parse,stringify}\n* Free of `eval` and intermediate string representations\n* Sane parse error messages with line/column\n\nIn addition of pure data it allows for simple arithmetic expressions like\naddition and multiplication.\nThis allows more readable configuration of numbers,\nthe following is a valid strict CSON file:\n\n```coffee\ncachedData:\n  refreshIntervalMs: 5 * 60 * 1000\n```\n\n## Install\n\n`npm install --save cson-safe`\n\n## Usage\n\n```coffee\nCSON = require 'cson-safe'\n# This will print { a: '123' }\nconsole.log CSON.parse \"a: '123'\"\n```\n\n## FAQ\n\n### Why not just use YAML?\n\nYAML allows for some pretty complex constructs like anchor and alias,\nwhich can behave in unexpected ways, especially with nested objects.\nCSON is simpler while still offering most of the niceties of YAML.\n\n### Why not just use JSON?\n\nJSON doesn't offer multi-line strings and is generally a little noisier.\nAlso sometimes it can be nice to have comments in config files.\n\n### Why not just use CoffeeScript directly?\n\nYou don't want data files being able to run arbitrary code.\nEven when ran in a proper sandbox, `while(true)` is still possible.\n",
  "readmeFilename": "README.md",
  "homepage": "https://github.com/groupon/cson-safe",
  "_id": "cson-safe@0.1.1",
  "_from": "cson-safe@>=0.1.1 <0.2.0"
}
