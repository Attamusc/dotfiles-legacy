{
  "name": "vim-surround",
  "main": "./lib/surround",
  "version": "0.5.0",
  "description": "vim-surround for Atom!",
  "repository": {
    "type": "git",
    "url": "https://github.com/gepoch/vim-surround"
  },
  "license": "MIT",
  "engines": {
    "atom": ">0.50.0"
  },
  "dependencies": {},
  "readme": "# Vim Surround for Atom [![Build Status](https://travis-ci.org/gepoch/vim-surround.svg?branch=master)](https://travis-ci.org/gepoch/vim-surround)\n\nSurround is an implementation of vim-surround for the [atom](http://atom.io)\neditor, creating a vim-surround with the power of Atom!\n\nYou should definitely have [vim-mode](https://atom.io/packages/vim-mode) for\nthis package to function properly, of course.\n\nInspiration from and kudos to the wonderful [vim-surround for\nvim](https://github.com/tpope/vim-surround)\n\nSee vim-surround on [github](https://github.com/gepoch/vim-surround) or\n[atom.io](https://atom.io/packages/vim-surround).\n\n## News\n\n* This package supports visual mode's `s )` set of commands for a configurable\n  set of pairs.\n\n* Next on the roadmap are pair deletions with `d )` and friends.\n\n* New in 0.4: Multiple cursors are now supported, and conveniently work just\n  like you think they do.\n\n* New in 0.5: Stable configuration changes and configurable surround key!\n\n### Muscle Memory Compatability Note\n\nvim-surround uses a lowercase `s` instead of `S` for surround commands! This is\nconfigurable in the package settings, if you would like to set it to the\noriginal keybinding.\n\n## How to use Surround\n\nFor double quotes, highlight the string in visual mode and enter `s \"`.\n\n```\nHello world -> \"Hello world\"\n```\n\nFor parentheses there are two options. `s )` will surround as normal. `s (`\nwill pad with a space. All asymmetrical pairs have the secondary space-padded\nform.\n\nFor example:\n\n`s )`\n\n```\nHello world -> (Hello world)\n```\n\n`s (`\n\n```\nHello world -> ( Hello world )\n```\n\nCurrently, the following pairs work out of the box!:\n\n- ()\n- []\n- {}\n- \"\"\n- ''\n\nYou can add to the available pairs in atom's settings, and the commands will\nbe dynamically added to your keybindings.\n\nFor example if I'm working on Jinja templates, and I want to add the ability to\nsurround using `{%` and `%}` I would add this in my settings:\n\n```\n(), [], {}, \"\", '', {%%}\n```\n\nThen:\n\n`s % }`\n\n```\nHello world -> {%Hello world%}\n```\n\n`s { %`\n\n```\nHello world -> {% Hello world %}\n```\n\n### TODO\n\n- [ ] Implement deleting surrounding pairs with `d s`\n- [ ] Implement changing surrounding pairs with `c s`\n- [ ] Intelligent tag surrounding/deleting/replacing with `s <q>` and friends.\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/gepoch/vim-surround/issues"
  },
  "homepage": "https://github.com/gepoch/vim-surround",
  "_id": "vim-surround@0.5.0",
  "_shasum": "a35da12d20e972a46ad4a05b4fc7d005dd79f28b",
  "_resolved": "file:../d-115229-92977-8mvp32/package.tgz",
  "_from": "../d-115229-92977-8mvp32/package.tgz",
  "_atomModuleCache": {
    "version": 1,
    "dependencies": [],
    "extensions": {
      ".coffee": [
        "lib/surround.coffee"
      ],
      ".json": [
        "package.json"
      ]
    },
    "folders": []
  }
}