#!/usr/bin/env ruby

require 'optparse'

module GitWorkflow
  # Core CLI class for workflow-ing
  class CLI
    def initialize
      @options = {
        separator: '/',
        prefix: 'feature',
        suffix: '',
        branch: '',
        upstream: 'upstream/master'
      }
      @options_parser = make_option_parser
    end

    def parse_options
      @options_parser.parse!
    end

    def run(feature_name)
      error_out if feature_name.nil? || feature_name.empty?

      @feature_name = feature_name

      if new_branch?
        checkout_branch!
      else
        checkout_branch
      end
    end

    private

      def error_out
        puts '[ERROR] - A branch name is required'
        @options_parser.help
        exit 1
      end

      def new_branch?
        `git branch --all | sed -e 's/^[ \t]*//' | grep ^#{full_branch_name}$ | wc -l`.to_i == 0
      end

      def checkout_branch!
        cmd = "git checkout -b #{full_branch_name}"
        cmd << " #{@options[:branch]}" unless @options[:branch].empty?
        cmd << " --track #{@options[:upstream]}" unless @options[:upstream].empty?
        `#{cmd}`
      end

      def checkout_branch
        `git checkout #{full_branch_name}`
      end

      def banner
        'Usage: git-workflow [options] feature_name'
      end

      def make_option_parser
        OptionParser.new do |opts|
          opts.banner = banner

          opts.on('-p PREFIX', '--prefix PREFIX',
                  'Prefix for the branch') { |prefix| @options[:prefix] = prefix }
          opts.on('-b BRANCH', '--branch BRANCH',
                  'Source branch, if not the current branch') { |branch| @options[:branch] = branch }
          opts.on('-s SEPARATOR', '--separator SEPARATOR',
                  'Separator between type and feature name') { |separator| @options[:separator] = separator }
          opts.on('-u UPSTREAM', '--upstream UPSTREAM',
                  'Upstream branch to track for feature') { |upstream| @options[:upstream] = upstream }
        end
      end

      def full_branch_name
        "#{@options[:prefix]}#{@options[:separator]}#{@feature_name}#{@options[:suffix]}"
      end
    end
end

GitWorkflow::CLI.new.tap do |cli|
  cli.parse_options
  cli.run(ARGV[0])
end
